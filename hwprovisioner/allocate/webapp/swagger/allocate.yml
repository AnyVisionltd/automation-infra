---
openapi: '3.0.0'
info:
  title: AnyVision allocate API
  version: "0.1"
  description: >-
    A service which allocates resources (servers, VMs, devices) for developers
paths:
  /allocate:
    get:
      tags: [Allocate]
      operationId: webapp.allocate.ws_allocate
      summary: Get all items from the inventory
      responses:
        200:
          description: Return all items from the inventory
          content:
            application/json:
              schema:
                type: object
                properties:
                  host:
                    type: string
  /inventory:
    get:
      tags: [Inventory]
      operationId: webapp.inventory.get_all
      summary: Get all items from the inventory
      responses:
        200:
          description: Return all items from the inventory
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: The status for the operation
                    example: 200
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Inventory'
    post:
      tags: [Inventory]
      operationId: webapp.inventory.post
      summary: Saves an item to the inventory
      requestBody:
        description: item to add to the inventory
        content:
          application/json:
            schema:
              properties:
                data:
                  $ref: '#/components/schemas/InventoryWithoutId'
      responses:
        200:
          description: Return all items from the inventory
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: The status for the operation
                    example: 200
                  data:
                    $ref: '#/components/schemas/Inventory'
  /inventory/{inventory_id}:
    get:
      tags: [Inventory]
      operationId: webapp.inventory.get_one
      summary: Get a single item from the inventory
      parameters:
        - name: inventory_id
          in: path
          description: the inventory id
          required: true
          schema:
            type: integer
            format: uuid
      responses:
        200:
          description: Return all items from the inventory
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: The status for the operation
                    example: 200
                  data:
                    $ref: '#/components/schemas/Inventory'
components:
  schemas:
    Inventory:
      allOf:
        - $ref: '#/components/schemas/InventoryWithoutId'
        - type: object
          properties:
            inventory_id:
              type: string
              description: The unique ID for this item
              example: 8a526e72-bcde-45e6-8a5f-f598b350f093
    InventoryWithoutId:
      type: object
      properties:
        labels:
          type: array
          description: A list of labels associated with this item
          items:
            type: string
            description: A label
          example:
            - belfast
            - nvidia
        cpu_count:
          type: integer
          description: The number of CPUs on this item
          example: 12
        memory_count:
          type: integer
          description: The amount of memory on this item
          example: 32
        gpus:
          type: array
          description: A list of available GPUs on this item
          items:
            type: string
            description: the name of the gpu
          example:
            - nvidia
        type:
          type: string
          description: The type of item that this is
          example: vm
