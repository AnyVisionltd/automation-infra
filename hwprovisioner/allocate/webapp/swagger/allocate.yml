---
openapi: '3.0.0'
info:
  title: AnyVision allocate API
  version: "0.1"
  description: >-
    A service which allocates resources (servers, VMs, devices) for developers
paths:
  /jobs:
    get:
      tags: [Jobs]
      operationId: webapp.jobs.alljobs
      summary: Get all jobs from the inventory
      responses:
        200:
          description: Return all jobs from the inventory
          content:
            application/json:
              schema:
                type: array
                description: A list of labels associated with this item
                items:
                  type: object
                  properties:
                    allocation_id:
                      type: string
                    data:
                      type: string
    post:
      tags: [Jobs]
      operationId: webapp.jobs.post
      summary: Adds a job to the queue
      requestBody:
        description: job info
        content:
          application/json:
            schema:
              properties:
                demands:
                  type: object
      responses:
        200:
          description: Return all items from the inventory
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    description: The status for the operation
                    example: 200
  /jobs/{allocation_id}:
    get:
      tags: [Jobs]
      operationId: webapp.jobs.onejob
      summary: Get one job from the inventory
      parameters:
        - name: allocation_id
          in: path
          description: job allocation id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Returns a single job from the inventory
          content:
            application/json:
              schema:
                type: object
                description: The job object
                properties:
                  allocation_id:
                    type: string
                  data:
                    type: string
  /ws/jobs:
    get:
      tags: [Jobs, WebSocket]
      operationId: webapp.jobs.sub
      summary: Testing infrastructure connects to this ws, sends demands over it, and
      responses:
        200:
          description: Return all jobs from the inventory
          content:
            application/json:
              schema:
                type: object
                properties:
                  allocation_id:
                    type: string
                  demands:
                    type: string
  /resource_manager/heartbeat:
    put:
      operationId: webapp.resourcemanager.heartbeat
      summary: >-
        Resource managers send heartbeats to this route in order for the allocator to know they exist and enable him
        to query them for fulfilling jobs.
      requestBody:
        description: a dict of resource_manager properties
        content:
          application/json:
            schema:
              properties:
                data:
                  type: object
                  required: ["alias", "endpoint", "rm_type", "last_hb"]
                  properties:
                    alias:
                      type: string
                    endpoint:
                      type: string
                    rm_type:
                      type: string
                    last_hb:
                      type: integer
                      example: 1595759915
      responses:
        200:
          description: Operation success indicator
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
